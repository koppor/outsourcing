<!-- consumerProcessView BPEL Process [Generated by the Eclipse BPEL Designer] -->
<!-- Date: Fri May 31 16:39:54 CEST 2013 -->
<bpel:process name="consumerProcessView"
         targetNamespace="http://www.example.org/matching/GSM"
         suppressJoinFailure="yes"
         xmlns:tns="http://www.example.org/matching/GSM"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/abstract"
         xmlns:esrc="http://www.cs.helsinki.fi/u/anorta/research/eSourcing/"
         >

	<bpel:extensions>
		<bpel:extension namespace="http://www.cs.helsinki.fi/u/anorta/research/eSourcing/" mustUnderstand="yes" />
	</bpel:extensions>

    <!-- Import the client WSDL -->
    <bpel:import location="../wsdlArtifacts.wsdl" namespace="http://www.example.org/matching/GSM"
	        importType="http://schemas.xmlsoap.org/wsdl/" />

    <!-- ================================================================= -->
    <!-- ORCHESTRATION LOGIC                                               -->
    <!-- Set of activities coordinating the flow of messages across the    -->
    <!-- services integrated within this business process                  -->
    <!-- ================================================================= -->
    <bpel:partnerLinks>
        <bpel:partnerLink name="functionalityPL" partnerLinkType="tns:functionalityPLT" partnerRole="functionality"></bpel:partnerLink>
        <bpel:partnerLink name="controlPL" partnerLinkType="tns:controlPLT" myRole="controlled"></bpel:partnerLink>
    </bpel:partnerLinks>
    <bpel:variables>
        <bpel:variable name="functionalityPLRequest" messageType="tns:getGSMRequest"></bpel:variable>
        <bpel:variable name="functionalityPLRequest1" messageType="tns:wrapEnvelopeRequest"></bpel:variable>
        <bpel:variable name="functionalityPLRequest2" messageType="tns:configureGSMRequest"></bpel:variable>
        <bpel:variable name="functionalityPLResponse" messageType="tns:scheduleRouteResponse"></bpel:variable>
        <bpel:variable name="functionalityPLRequest3" messageType="tns:scheduleRouteRequest"></bpel:variable>
        <bpel:variable name="functionalityPLRequest4" messageType="tns:deliverRegularRequest"></bpel:variable>
        <bpel:variable name="functionalityPLRequest5" messageType="tns:deliverSpecialRequest"></bpel:variable>
        <bpel:variable name="functionalityPLRequest6" messageType="tns:deliverExpressRequest"></bpel:variable>
        <bpel:variable name="functionalityPLRequest7" messageType="tns:handoverParcelRequest"></bpel:variable>
        <bpel:variable name="controlPLRequest" messageType="tns:way1Request"></bpel:variable>
        <bpel:variable name="controlPLRequest1" messageType="tns:way2Request"></bpel:variable>
    </bpel:variables>
    <bpel:sequence name="SEQ1" esrc:status="observable" >


        <bpel:invoke name="c:getGSM" esrc:status="invokable" partnerLink="functionalityPL" operation="getGSM" inputVariable="functionalityPLRequest"></bpel:invoke>



        <bpel:pick name="Pick" esrc:status="EXOR">
            <bpel:onMessage partnerLink="controlPL" operation="way1" portType="tns:controlPT" variable="controlPLRequest">
                <bpel:invoke name="c:WrapEnvelope" esrc:status="invokable" partnerLink="functionalityPL" operation="wrapEnvelope" portType="tns:functionalityPt" inputVariable="functionalityPLRequest1"></bpel:invoke>
            </bpel:onMessage>
            <bpel:onMessage partnerLink="controlPL" operation="way2" portType="tns:controlPT" variable="controlPLRequest1">
                <bpel:invoke name="c:configureGSM" esrc:status="invokable" partnerLink="functionalityPL" operation="configureGSM" portType="tns:functionalityPt" inputVariable="functionalityPLRequest2"></bpel:invoke>
            </bpel:onMessage>
        </bpel:pick>
        <bpel:sequence name="SEQ2" esrc:status="observable">
            <bpel:invoke name="c:scheduleRoute" esrc:status="observable" partnerLink="functionalityPL" operation="scheduleRoute" portType="tns:functionalityPt" inputVariable="functionalityPLRequest3" outputVariable="functionalityPLResponse"></bpel:invoke>
            <bpel:if name="If1" esrc:status="IXOR"><bpel:invoke name="c:deliverRegular" esrc:status="observable" partnerLink="functionalityPL" operation="deliverRegular" portType="tns:functionalityPt" inputVariable="functionalityPLRequest4"></bpel:invoke>
        <bpel:elseif>
                <bpel:invoke name="c:deliverSpecial" esrc:status="observable" partnerLink="functionalityPL" operation="deliverSpecial" portType="tns:functionalityPt" inputVariable="functionalityPLRequest5"></bpel:invoke>
            </bpel:elseif><bpel:else>
                <bpel:invoke name="c:deliverExpress" esrc:status="observable" partnerLink="functionalityPL" operation="deliverExpress" portType="tns:functionalityPt" inputVariable="functionalityPLRequest6"></bpel:invoke>
            </bpel:else>
            </bpel:if>
            <bpel:invoke name="c:handoverParcel" esrc:status="observable" partnerLink="functionalityPL" operation="handoverParcel" portType="tns:functionalityPt" inputVariable="functionalityPLRequest7"></bpel:invoke>
        </bpel:sequence>



    </bpel:sequence>
</bpel:process>

